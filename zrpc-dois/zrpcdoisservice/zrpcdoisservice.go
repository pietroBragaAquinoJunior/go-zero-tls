// Code generated by goctl. DO NOT EDIT.
// Source: zrpc-dois.proto

package zrpcdoisservice

import (
	"context"

	"go-zero-tls/common/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ZrpcDoisMethodRequest  = __.ZrpcDoisMethodRequest
	ZrpcDoisMethodResponse = __.ZrpcDoisMethodResponse

	ZrpcDoisService interface {
		ZrpcDoisMethod(ctx context.Context, in *ZrpcDoisMethodRequest, opts ...grpc.CallOption) (*ZrpcDoisMethodResponse, error)
	}

	defaultZrpcDoisService struct {
		cli zrpc.Client
	}
)

func NewZrpcDoisService(cli zrpc.Client) ZrpcDoisService {
	return &defaultZrpcDoisService{
		cli: cli,
	}
}

func (m *defaultZrpcDoisService) ZrpcDoisMethod(ctx context.Context, in *ZrpcDoisMethodRequest, opts ...grpc.CallOption) (*ZrpcDoisMethodResponse, error) {
	client := __.NewZrpcDoisServiceClient(m.cli.Conn())
	return client.ZrpcDoisMethod(ctx, in, opts...)
}
